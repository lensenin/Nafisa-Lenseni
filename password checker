#include<fstream> 
#include<iostream> 
#include<string>
#include <stdexcept> 
#include<vector>
#include <iomanip>
#include <algorithm>
#include <numeric>
#include <map>
using std::map;
using std::fixed; using std::setprecision;
using std::vector; using std::string;
using std::ifstream; using std::stod; using std::out_of_range;
using std::cin; using std::cout; using std::endl; using std::max;
using std::max_element; using std::min_element;
using std::accumulate; using std::sort;


// use a try catch compare each letter at the index if you fall out of range incrment your difference counter. 
/**
Give me a password:
You provided a password of catsnake
The most similar passwords to catsnake are:
banana, canada, caroline, cartman, cassie, crystal, galina, gateway, karina, kawasaki, marina, marshall, maryjane, patrick, 
All of which are 5 character(s) different.
josh 
fish john joshua
**/

vector<string> open_file_to_vector(string filename) {
    vector<string> passwords;
    ifstream in_file;
    in_file.open(filename);
    string password;
    while (in_file >> password) {
       passwords.push_back(password);
    } 
    return passwords;
}

int differences(string password, string word){
    int different = 0; 
    int passwordl = static_cast<int>(password.length());
    int wordl = static_cast<int>(word.length());
    int maxword = max(passwordl,wordl);
    for(int x = 0; x < maxword; x++) {
        try {
            if (password.at(x) != word.at(x)) {
                 different += 1;
            } 
            } catch (out_of_range& e) {
                 different += 1;
             }   
         } 
    return different;  
    }


int get_smallest_difference(map<int,vector<string>> word_differences) {
    vector<int> count;
    for (auto it = word_differences.begin(); it != word_differences.end(); ++it) { 
        count.push_back(it ->first);
    }
    sort(count.begin(), count.end());

    return count[0];
}


void print_result(int count, vector<string> closeWords, string password) {
    cout << "You provided a password of " << password << endl;
    cout << "The most similar passwords to " << password << " are:" << endl;
    for (auto i: closeWords) {
        cout << i << ", ";
    }
    cout << endl;
    cout << "All of which are " << count << " character(s) different." <<endl;
}


int main( ) {
    string given_password;
    cout << "Give me a password:" << endl;
    cin >> given_password;
    

    map<int,vector<string>> diffToWords;
    vector<string> passwords = open_file_to_vector("common_passwords.txt");
    
    for(auto x : passwords) {
        int diff_count = differences(given_password, x);
        diffToWords[diff_count].push_back(x);
    }

    int smallest = get_smallest_difference(diffToWords);
    vector<string> closeWords = diffToWords[smallest];
    sort(closeWords.begin(), closeWords.end());

    print_result(smallest, closeWords, given_password);

}
